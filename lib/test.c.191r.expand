
;; Function main (main, funcdef_no=0, decl_uid=1833, cgraph_uid=0, symbol_order=0)

main ()
{
  int D.1836;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  putChar (60);
  _3 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



Partition map 

Partition 3 (_3 - 3 )

After Coalescing:

Partition map 

Partition 0 (_3 - 3 )

main ()
{
  int D.1836;
  int _3;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  putChar (60);
  _3 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _3;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; putChar (60);

(insn 5 4 6 (set (reg:SI 5 di)
        (const_int 60 [0x3c])) test.c:6 -1
     (nil))

(call_insn 6 5 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putChar") [flags 0x41]  <function_decl 0x7f8f5472d1b0 putChar>) [0 putChar S1 A8])
            (const_int 0 [0]))) test.c:6 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; _3 = 0;

(insn 7 6 0 (set (reg:SI 87 [ D.1839 ])
        (const_int 0 [0])) test.c:7 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 8 7 9 2 "" [0 uses])

(note 9 8 0 NOTE_INSN_BASIC_BLOCK)

;; return _3;

(insn 10 9 11 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.1839 ])) -1
     (nil))

(jump_insn 11 10 12 (set (pc)
        (label_ref 0)) -1
     (nil))

(barrier 12 11 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 11.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 5 di)
        (const_int 60 [0x3c])) test.c:6 -1
     (nil))
(call_insn 6 5 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putChar") [flags 0x41]  <function_decl 0x7f8f5472d1b0 putChar>) [0 putChar S1 A8])
            (const_int 0 [0]))) test.c:6 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 7 6 10 2 (set (reg:SI 87 [ D.1839 ])
        (const_int 0 [0])) test.c:7 -1
     (nil))
(insn 10 7 14 2 (set (reg:SI 88 [ <retval> ])
        (reg:SI 87 [ D.1839 ])) -1
     (nil))
(insn 14 10 15 2 (set (reg/i:SI 0 ax)
        (reg:SI 88 [ <retval> ])) test.c:8 -1
     (nil))
(insn 15 14 0 2 (use (reg/i:SI 0 ax)) test.c:8 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

