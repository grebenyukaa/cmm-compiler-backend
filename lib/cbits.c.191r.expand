
;; Function putChar (putChar, funcdef_no=0, decl_uid=2284, cgraph_uid=0, symbol_order=0)

putChar (int X)
{
  int D.2293;
  struct _IO_FILE * stdout.0;
  int D.2291;
  char D.2290;
  char _2;
  int _3;
  struct _IO_FILE * stdout.0_6;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = (char) X_1(D);
  _3 = (int) _2;
  putchar (_3);
  stdout.0_6 = stdout;
  fflush (stdout.0_6);
  _8 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _8;
;;    succ:       EXIT

}



Partition map 

Partition 1 (X_1(D) - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 6 (stdout.0_6 - 6 )
Partition 8 (_8 - 8 )


Partition map 

Partition 0 (X_1(D) - 1 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (X_1(D) - 1 )

After Coalescing:

Partition map 

Partition 0 (X_1(D) - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (stdout.0_6 - 6 )
Partition 4 (_8 - 8 )

putChar (int X)
{
  int D.2293;
  struct _IO_FILE * stdout.0;
  int D.2291;
  char D.2290;
  char _2;
  int _3;
  struct _IO_FILE * stdout.0_6;
  int _8;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _2 = (char) X_1(D);
  _3 = (int) _2;
  putchar (_3);
  stdout.0_6 = stdout;
  fflush (stdout.0_6);
  _8 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _8;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _2 = (char) X_1(D);

(insn 6 5 7 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 X+0 S4 A32])) cbits.c:10 -1
     (nil))

(insn 7 6 0 (set (reg:QI 87 [ D.2300 ])
        (subreg:QI (reg:SI 92) 0)) cbits.c:10 -1
     (nil))

;; _3 = (int) _2;

(insn 8 7 0 (set (reg:SI 88 [ D.2301 ])
        (sign_extend:SI (reg:QI 87 [ D.2300 ]))) cbits.c:10 -1
     (nil))

;; putchar (_3);

(insn 9 8 10 (set (reg:SI 5 di)
        (reg:SI 88 [ D.2301 ])) cbits.c:10 -1
     (nil))

(call_insn 10 9 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc8401590d8 putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) cbits.c:10 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))

;; _6 = stdout;

(insn 11 10 12 (set (reg/f:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fc8402055a0 stdout>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) cbits.c:11 -1
     (nil))

(insn 12 11 0 (set (reg/f:DI 89 [ D.2302 ])
        (mem/f/c:DI (reg/f:DI 93) [0 stdout+0 S8 A64])) cbits.c:11 -1
     (nil))

;; fflush (_6);

(insn 13 12 14 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.2302 ])) cbits.c:11 -1
     (nil))

(call_insn 14 13 0 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7fc84022e870 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) cbits.c:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))

;; _8 = 0;

(insn 15 14 0 (set (reg:SI 90 [ D.2301 ])
        (const_int 0 [0])) cbits.c:12 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 16 15 17 2 "" [0 uses])

(note 17 16 0 NOTE_INSN_BASIC_BLOCK)

;; return _8;

(insn 18 17 19 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.2301 ])) cbits.c:12 -1
     (nil))

(jump_insn 19 18 20 (set (pc)
        (label_ref 0)) cbits.c:12 -1
     (nil))

(barrier 20 19 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 19.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 X+0 S4 A32])
        (reg:SI 5 di [ X ])) cbits.c:9 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 92)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [0 X+0 S4 A32])) cbits.c:10 -1
     (nil))
(insn 7 6 8 2 (set (reg:QI 87 [ D.2300 ])
        (subreg:QI (reg:SI 92) 0)) cbits.c:10 -1
     (nil))
(insn 8 7 9 2 (set (reg:SI 88 [ D.2301 ])
        (sign_extend:SI (reg:QI 87 [ D.2300 ]))) cbits.c:10 -1
     (nil))
(insn 9 8 10 2 (set (reg:SI 5 di)
        (reg:SI 88 [ D.2301 ])) cbits.c:10 -1
     (nil))
(call_insn 10 9 11 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("putchar") [flags 0x41]  <function_decl 0x7fc8401590d8 putchar>) [0 __builtin_putchar S1 A8])
            (const_int 0 [0]))) cbits.c:10 -1
     (nil)
    (expr_list:SI (use (reg:SI 5 di))
        (nil)))
(insn 11 10 12 2 (set (reg/f:DI 93)
        (mem/u/c:DI (const:DI (unspec:DI [
                        (symbol_ref:DI ("stdout") [flags 0x40]  <var_decl 0x7fc8402055a0 stdout>)
                    ] UNSPEC_GOTPCREL)) [0  S8 A8])) cbits.c:11 -1
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 89 [ D.2302 ])
        (mem/f/c:DI (reg/f:DI 93) [0 stdout+0 S8 A64])) cbits.c:11 -1
     (nil))
(insn 13 12 14 2 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.2302 ])) cbits.c:11 -1
     (nil))
(call_insn 14 13 15 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fflush") [flags 0x41]  <function_decl 0x7fc84022e870 fflush>) [0 fflush S1 A8])
            (const_int 0 [0]))) cbits.c:11 -1
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 18 2 (set (reg:SI 90 [ D.2301 ])
        (const_int 0 [0])) cbits.c:12 -1
     (nil))
(insn 18 15 22 2 (set (reg:SI 91 [ <retval> ])
        (reg:SI 90 [ D.2301 ])) cbits.c:12 -1
     (nil))
(insn 22 18 23 2 (set (reg/i:SI 0 ax)
        (reg:SI 91 [ <retval> ])) cbits.c:13 -1
     (nil))
(insn 23 22 0 2 (use (reg/i:SI 0 ax)) cbits.c:13 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)


;; Function getChar (getChar, funcdef_no=1, decl_uid=2287, cgraph_uid=1, symbol_order=1)

getChar (int * X)
{
  int D.2296;
  int D.2295;
  int _3;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = getchar ();
  *X_4(D) = _3;
  _6 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



Partition map 

Partition 3 (_3 - 3 )
Partition 4 (X_4(D) - 4 )
Partition 6 (_6 - 6 )


Partition map 

Partition 0 (X_4(D) - 4 )


Conflict graph:

After sorting:
Coalesce List:

Partition map 

Partition 0 (X_4(D) - 4 )

After Coalescing:

Partition map 

Partition 0 (_3 - 3 )
Partition 1 (X_4(D) - 4 )
Partition 2 (_6 - 6 )

getChar (int * X)
{
  int D.2296;
  int D.2295;
  int _3;
  int _6;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _3 = getchar ();
  *X_4(D) = _3;
  _6 = 0;
;;    succ:       3

;;   basic block 3, loop depth 0
;;    pred:       2
<L0>:
  return _6;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _3 = getchar ();

(call_insn 6 5 7 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getchar") [flags 0x41]  <function_decl 0x7fc840235510 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) cbits.c:17 -1
     (nil)
    (nil))

(insn 7 6 0 (set (reg:SI 87 [ D.2303 ])
        (reg:SI 0 ax)) cbits.c:17 -1
     (nil))

;; *X_4(D) = _3;

(insn 8 7 9 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])) cbits.c:17 -1
     (nil))

(insn 9 8 0 (set (mem:SI (reg/f:DI 90) [0 *X_4(D)+0 S4 A32])
        (reg:SI 87 [ D.2303 ])) cbits.c:17 -1
     (nil))

;; _6 = 0;

(insn 10 9 0 (set (reg:SI 88 [ D.2303 ])
        (const_int 0 [0])) cbits.c:18 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; <L0>:

(code_label 11 10 12 4 "" [0 uses])

(note 12 11 0 NOTE_INSN_BASIC_BLOCK)

;; return _6;

(insn 13 12 14 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.2303 ])) cbits.c:18 -1
     (nil))

(jump_insn 14 13 15 (set (pc)
        (label_ref 0)) cbits.c:18 -1
     (nil))

(barrier 15 14 0)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 4 into block 2...
Merged blocks 2 and 4.
Merged 2 and 4 without moving.
Removing jump 14.
Merging block 5 into block 2...
Merged blocks 2 and 5.
Merged 2 and 5 without moving.


try_optimize_cfg iteration 2



;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])
        (reg:DI 5 di [ X ])) cbits.c:16 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(call_insn 6 3 7 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("getchar") [flags 0x41]  <function_decl 0x7fc840235510 getchar>) [0 getchar S1 A8])
            (const_int 0 [0]))) cbits.c:17 -1
     (nil)
    (nil))
(insn 7 6 8 2 (set (reg:SI 87 [ D.2303 ])
        (reg:SI 0 ax)) cbits.c:17 -1
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [0 X+0 S8 A64])) cbits.c:17 -1
     (nil))
(insn 9 8 10 2 (set (mem:SI (reg/f:DI 90) [0 *X_4(D)+0 S4 A32])
        (reg:SI 87 [ D.2303 ])) cbits.c:17 -1
     (nil))
(insn 10 9 13 2 (set (reg:SI 88 [ D.2303 ])
        (const_int 0 [0])) cbits.c:18 -1
     (nil))
(insn 13 10 17 2 (set (reg:SI 89 [ <retval> ])
        (reg:SI 88 [ D.2303 ])) cbits.c:18 -1
     (nil))
(insn 17 13 18 2 (set (reg/i:SI 0 ax)
        (reg:SI 89 [ <retval> ])) cbits.c:19 -1
     (nil))
(insn 18 17 0 2 (use (reg/i:SI 0 ax)) cbits.c:19 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)

